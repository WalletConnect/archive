name: validate

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'the environment to validate'
        required: true
        default: 'staging'
        type: choice
        options:
        - prod
        - staging
        - dev
  workflow_call:
    inputs:
      environment:
        description: 'the environment to validate'
        required: true
        default: 'staging'
        type: string

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: "yarn"
          cache-dependency-path: "**/yarn.lock"

      - name: install
        run: yarn install
      - run: yarn integration:$ENVIRONMENT
        env:
          ENVIRONMENT: ${{ inputs.environment }}

  validate-rust:
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: sccache
      SCCACHE_CACHE_SIZE: 1G
      SCCACHE_DIR: /home/runner/.cache/sccache
    steps:
      - name: "Git checkout"
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: "Install sccache"
        env:
          SCCACHE_URL: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: v0.4.0
        run: |
          SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
          curl -sSL "$SCCACHE_URL/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
          install -vDm 755 "$SCCACHE_FILE/sccache" "$HOME/.local/bin/sccache"
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"

      - name: "Install Rust nightly"
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          components: rustfmt, clippy

      # Rebuild cache
      - name: Cache cargo registry
        uses: Swatinem/rust-cache@v2
        with:
          sharedKey: "tests"
        continue-on-error: false

      - name: Cache sccache
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: /home/runner/.cache/sccache
          key: ${{ runner.os }}-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-sccache-

      - name: "Start sccache server"
        run: |
          sccache --stop-server || true
          sccache --start-server

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.8.0
        with:
          mongodb-version: '4.4'
          mongodb-db: gilgamesh

      - name: Install Protoc
        uses: arduino/setup-protoc@v1

      - name: "Tests"
        uses: actions-rs/cargo@v1
        env:
          LOG_LEVEL: TRACE
          ENVIRONMENT: ${{ inputs.environment }}
        with:
          command: test
          args: --features=relay-tests

      - name: "Print sccache stats"
        run: sccache --show-stats

      - name: "Stop sccache server"
        run: sccache --stop-server || true
